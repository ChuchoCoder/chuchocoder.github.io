{"version":3,"file":"ArbitrageOperationsDetail-CSfbTzLm.js","sources":["../../src/components/Processor/ArbitrageOperationsDetail.jsx"],"sourcesContent":["/**\n * ArbitrageOperationsDetail - Display operations in side-by-side tables\n * Follows the same pattern as COMPRA y VENTA view\n * Shows CI operations on one side and 24h operations on the other\n */\n\nimport { useMemo } from 'react';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Typography from '@mui/material/Typography';\nimport Chip from '@mui/material/Chip';\nimport Tooltip from '@mui/material/Tooltip';\nimport InfoIcon from '@mui/icons-material/Info';\nimport IconButton from '@mui/material/IconButton';\n\nconst formatQuantity = (value) => {\n  if (!Number.isFinite(value)) return '';\n  return new Intl.NumberFormat('es-AR', {\n    useGrouping: true,\n    maximumFractionDigits: 0,\n  }).format(value);\n};\n\nconst formatPrice = (value) => {\n  if (!Number.isFinite(value)) return '';\n  return new Intl.NumberFormat('es-AR', {\n    useGrouping: true,\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 4,\n  }).format(value);\n};\n\nconst formatCurrency = (value) => {\n  if (!Number.isFinite(value)) return '';\n  return new Intl.NumberFormat('es-AR', {\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2,\n  }).format(value);\n};\n\n/**\n * Group operations by order_id (same as COMPRA y VENTA)\n */\nfunction groupOperationsByOrderId(operations) {\n  if (!operations || operations.length === 0) {\n    return [];\n  }\n\n  const grouped = new Map();\n\n  operations.forEach((op) => {\n    const orderId = op.order_id || op.id;\n    \n    if (!grouped.has(orderId)) {\n      grouped.set(orderId, {\n        ...op,\n        order_id: orderId,\n        cantidad: op.cantidad,\n        total: op.total || (op.cantidad * op.precio),\n        comisiones: op.comisiones || 0,\n        partialFills: 1,\n      });\n    } else {\n      const existing = grouped.get(orderId);\n      existing.cantidad += op.cantidad;\n      existing.total += (op.total || (op.cantidad * op.precio));\n      existing.comisiones += (op.comisiones || 0);\n      existing.partialFills += 1;\n    }\n  });\n\n  return Array.from(grouped.values());\n}\n\n/**\n * Calculate totals including weighted average price\n */\nfunction calculateTotals(operations) {\n  const totals = operations.reduce((acc, op) => {\n    acc.cantidad += op.cantidad || 0;\n    acc.total += op.total || 0;\n    acc.comisiones += op.comisiones || 0;\n    acc.cantidadPrecio += (op.cantidad || 0) * (op.precio || 0);\n    return acc;\n  }, { cantidad: 0, total: 0, comisiones: 0, cantidadPrecio: 0 });\n  \n  // Calculate weighted average price\n  totals.precioPromedio = totals.cantidad > 0 ? totals.cantidadPrecio / totals.cantidad : 0;\n  \n  return totals;\n}\n\n/**\n * Single table for either CI or 24h operations\n */\nconst OperationsTable = ({ title, operations, _sideLabel, isSell }) => {\n  // _sideLabel is accepted for API compatibility; reference to satisfy linter\n  void _sideLabel;\n  const groupedOps = useMemo(() => {\n    const grouped = groupOperationsByOrderId(operations);\n    \n    // Sort based on side (compra vs venta)\n    return grouped.sort((a, b) => {\n      // For venta (sell): price (desc), then cantidad (desc)\n      if (isSell) {\n        // Price descending\n        if (a.precio !== b.precio) {\n          return b.precio - a.precio;\n        }\n        // Cantidad descending (absolute values for comparison)\n        return Math.abs(b.cantidad) - Math.abs(a.cantidad);\n      }\n      \n      // For compra (buy): price (asc), then cantidad (desc)\n      // Price ascending\n      if (a.precio !== b.precio) {\n        return a.precio - b.precio;\n      }\n      // Cantidad descending\n      return b.cantidad - a.cantidad;\n    });\n  }, [operations, isSell]);\n  \n  const totals = useMemo(() => calculateTotals(groupedOps), [groupedOps]);\n  const hasData = groupedOps.length > 0;\n  \n  // Determine colors based on side\n  const headerColor = isSell ? 'error.main' : 'success.main';\n  const headerBgColor = isSell ? 'error.light' : 'success.light';\n\n  return (\n    <Paper\n      elevation={0}\n      sx={{\n        flex: 1,\n        display: 'flex',\n        flexDirection: 'column',\n        minHeight: 0,\n        overflow: 'visible',\n        borderRadius: 0,\n      }}\n    >\n  <TableContainer sx={{ flex: 1, overflowX: 'auto', overflowY: 'visible' }}>\n        <Table size=\"small\" stickyHeader>\n          <TableHead>\n            {/* Title row with side label */}\n            <TableRow>\n              <TableCell\n                colSpan={4}\n                sx={{\n                  position: 'sticky',\n                  top: 0,\n                  backgroundColor: headerBgColor,\n                  zIndex: 2,\n                  borderBottom: 2,\n                  borderColor: 'divider',\n                  py: 1,\n                }}\n              >\n                <Typography \n                  variant=\"subtitle2\" \n                  sx={{ \n                    fontWeight: 700,\n                    color: headerColor,\n                    textAlign: 'center',\n                    fontSize: '0.9rem',\n                    letterSpacing: '0.5px',\n                  }}\n                >\n                  {title}\n                </Typography>\n              </TableCell>\n            </TableRow>\n            {/* Column headers with totals */}\n            <TableRow>\n              <TableCell sx={{ fontWeight: 600 }}>\n                Cantidad\n                {hasData && (\n                  <Typography variant=\"caption\" display=\"block\" sx={{ fontWeight: 700, color: 'text.primary' }}>\n                    {formatQuantity(totals.cantidad)}\n                  </Typography>\n                )}\n              </TableCell>\n              <TableCell align=\"right\" sx={{ fontWeight: 600 }}>\n                Precio\n                {hasData && (\n                  <Typography variant=\"caption\" display=\"block\" sx={{ fontWeight: 700, color: 'text.primary' }}>\n                    {formatPrice(totals.precioPromedio)}\n                  </Typography>\n                )}\n              </TableCell>\n              <TableCell align=\"right\" sx={{ fontWeight: 600 }}>\n                Total\n                {hasData && (\n                  <Typography variant=\"caption\" display=\"block\" sx={{ fontWeight: 700, color: 'text.primary' }}>\n                    {formatCurrency(totals.total)}\n                  </Typography>\n                )}\n              </TableCell>\n              <TableCell align=\"right\" sx={{ fontWeight: 600 }}>\n                Comisiones\n                {hasData && (\n                  <Typography variant=\"caption\" display=\"block\" sx={{ fontWeight: 700, color: 'text.primary' }}>\n                    {formatCurrency(totals.comisiones)}\n                  </Typography>\n                )}\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {!hasData && (\n              <TableRow>\n                <TableCell colSpan={4} align=\"center\">\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    Sin operaciones\n                  </Typography>\n                </TableCell>\n              </TableRow>\n            )}\n            {groupedOps.map((op, index) => {\n              // Determine if this is a sell operation\n              const isSellOp = op.lado === 'VENTA' || op.lado === 'V';\n              const displayQuantity = isSellOp ? -Math.abs(op.cantidad) : op.cantidad;\n              \n              return (\n                <TableRow\n                  key={op.order_id || index}\n                  sx={index % 2 === 1 ? { backgroundColor: 'action.hover' } : undefined}\n                >\n                  <TableCell>\n                    <Box sx={{ display: 'flex', alignItems: 'center', gap: 0.5 }}>\n                      <Typography\n                        variant=\"body2\"\n                        sx={{ color: isSellOp ? 'error.main' : 'inherit', fontWeight: isSellOp ? 500 : 400 }}\n                      >\n                        {formatQuantity(displayQuantity)}\n                      </Typography>\n                      {op.order_id && (\n                        <Tooltip title={`ID: ${op.order_id}`} placement=\"top\">\n                          <IconButton size=\"small\" sx={{ p: 0.25 }}>\n                            <InfoIcon sx={{ fontSize: 14, color: 'info.main' }} />\n                          </IconButton>\n                        </Tooltip>\n                      )}\n                      {op.partialFills > 1 && (\n                        <Chip \n                          label={`Ã—${op.partialFills}`} \n                          size=\"small\" \n                          sx={{ height: 16, fontSize: '0.65rem' }} \n                        />\n                      )}\n                    </Box>\n                  </TableCell>\n                  <TableCell align=\"right\">{formatPrice(op.precio)}</TableCell>\n                  <TableCell align=\"right\">{formatCurrency(op.total)}</TableCell>\n                  <TableCell align=\"right\" sx={{ color: 'text.secondary', fontWeight: 500 }}>\n                    {formatCurrency(op.comisiones)}\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Paper>\n  );\n};\n\n/**\n * Main component - side-by-side tables for CI and 24h operations\n */\nconst ArbitrageOperationsDetail = ({ operations, _patron }) => {\n  // _patron is accepted for API compatibility; reference to satisfy linter\n  void _patron;\n  // Split operations by venue (CI vs 24h)\n  const { ciOperations, h24Operations, ciSide, h24Side } = useMemo(() => {\n    if (!operations || operations.length === 0) {\n      return { ciOperations: [], h24Operations: [], ciSide: '', h24Side: '' };\n    }\n\n    const ci = [];\n    const h24 = [];\n    let ciLado = '';\n    let h24Lado = '';\n\n    operations.forEach((op) => {\n      const venue = op.venue || '';\n      if (venue.includes('CI')) {\n        ci.push(op);\n        if (!ciLado) ciLado = op.lado;\n      } else if (venue.includes('24')) {\n        h24.push(op);\n        if (!h24Lado) h24Lado = op.lado;\n      }\n    });\n\n    return {\n      ciOperations: ci,\n      h24Operations: h24,\n      ciSide: ciLado,\n      h24Side: h24Lado,\n    };\n  }, [operations]);\n\n  // Determine titles based on pattern\n  const ciTitle = ciSide === 'VENTA' || ciSide === 'V' ? 'Venta CI' : 'Compra CI';\n  const h24Title = h24Side === 'COMPRA' || h24Side === 'C' ? 'Compra 24hs' : 'Venta 24hs';\n  const ciIsSell = ciSide === 'VENTA' || ciSide === 'V';\n  const h24IsSell = h24Side === 'VENTA' || h24Side === 'V';\n\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        flexDirection: { xs: 'column', md: 'row' },\n        gap: 0,\n        minHeight: 200,\n        '& > :first-of-type': {\n          borderRight: { md: 1, xs: 0 },\n          borderBottom: { xs: 1, md: 0 },\n          borderColor: 'divider',\n        },\n      }}\n    >\n      <OperationsTable\n        title={ciTitle}\n        operations={ciOperations}\n        sideLabel={ciSide}\n        isSell={ciIsSell}\n      />\n      <OperationsTable\n        title={h24Title}\n        operations={h24Operations}\n        sideLabel={h24Side}\n        isSell={h24IsSell}\n      />\n    </Box>\n  );\n};\n\nexport default ArbitrageOperationsDetail;\n"],"names":["formatQuantity","value","Number","isFinite","Intl","NumberFormat","useGrouping","maximumFractionDigits","format","formatPrice","minimumFractionDigits","formatCurrency","OperationsTable","title","operations","_sideLabel","isSell","groupedOps","useMemo","grouped","length","Map","forEach","op","orderId","order_id","id","has","existing","get","cantidad","total","precio","comisiones","partialFills","set","Array","from","values","groupOperationsByOrderId","sort","a","b","Math","abs","totals","reduce","acc","cantidadPrecio","precioPromedio","calculateTotals","hasData","headerColor","headerBgColor","jsx","Paper","elevation","sx","flex","display","flexDirection","minHeight","overflow","borderRadius","children","TableContainer","overflowX","overflowY","jsxs","Table","size","stickyHeader","TableHead","TableRow","TableCell","colSpan","position","top","backgroundColor","zIndex","borderBottom","borderColor","py","Typography","variant","fontWeight","color","textAlign","fontSize","letterSpacing","align","TableBody","map","index","isSellOp","lado","displayQuantity","Box","alignItems","gap","Tooltip","placement","IconButton","p","InfoIcon","Chip","label","height","ArbitrageOperationsDetail","_patron","ciOperations","h24Operations","ciSide","h24Side","ci","h24","ciLado","h24Lado","venue","includes","push","ciTitle","h24Title","ciIsSell","h24IsSell","xs","md","borderRight","sideLabel"],"mappings":"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"}